*** WARNING ***
Content of this file is obsolete. See CVS HEAD branch and transcode wiki
for *real* TODO and *real* future development directions.


PROBLEMS/BUGS

(also read docs/OPTIMIZERS)
-------------------
General/
- clean up the YV12 vs I420 and RGB24 vs. BGR24 mess.

filter/
  filter_tc_video is broken for RGB mode

tools/
  The avi* utils have problems with some avifiles -- fixed?
  opendml AVIs do not work. They do now 2003/08/24

src/
  Make the order of execution of all the internal processing routines
  configureable (from a mail)
  As for the order of command line arguments. I have to say I
  don't like tools where ./foo -a -b is different than
  ./foo -b -a. Since I consider the wish for changing order of
  execution in video_trans.c a very advanced feature it might be
  feasible to add an option --internal_transforms STRING where
  string defaults to "jIXBZYrzlkKGC" (the pre-defined order) but
  allows to be overwritten. This is not easy to do (and may
  not even be the best solution) but I think if done correctly
  this option will give you all the freedom you want. Hmm, is the
  default order actually "jIXBZYrzlkKGC"? need to check that.

Slow filters and 30+ buffers and --nav_seek and -c:
 the time to sleep may be too short the import module will start over again,
 before the export is finished

import/
 - fix AC3 Pass-through for PSU mode.

cluster_mode+PSU
 - make these modes go a little better together
 11:39 <GigaStorm> also wie gesagt, wenn man genau nach den examples geht, d.h. 
                   nach cluster mode plus rippen einer 16:9 pal dvd, macht er 
		   nur psu0

More than one encoder thread
23:35 < GigaStorm> tibit: hmm, so i could install a real clustering system, and 
                   let transcode do the rest
23:35 < GomGom> tibit: write a XML-RPC interface and you do the first Internet 
                service based video encoder :))
23:35 < GigaStorm> would be nice hehe
23:35 < tibit> I'll probably need a real muxer api for that
23:37 < tibit> So an encoder thread pics up an uncompressed frame from the list 
               and writes back the encoded data
23:37 < GigaStorm> and it would be nice to transport the encoders output+input 
                   via an own pipe from the nodes to server, without using nfs 
                   or similar things :P
23:37 < GomGom> yep with the muxer API, transcode's nodes would use a network 
                muxer pointing at the master transcode
23:37 < tibit> GomGom: thats enough! ;)

2pass/
 - internal 2pass mode

 - transcode --detect modus
   choose and save tcscan information, etc

filter/
00:54 < GomGom> transcode -J help


23:11 < iMars> If someone sees this: I'd have a question that experienced 
               transcode users might know about, but that I couldn't find in 
               the mailing lists. Using -c in directory mode, or any other way 
               to skip commercials through multiple input files... I see no 
               documentation of -c's limitation to a single input file.
23:13 < tibit> iMars: that depends on the input
23:13 < iMars> A directory containing dvgrab'ed DV files in dv2 .avi format.


16:05 < GomGom> tibit: did you ever thought adding some compositing opengl 
                routines in transcode ?
16:05 < GomGom> tibit: you could do nice comositing
16:06 <@tibit> you mean '-F 3d -y gl' which will OCR the image, detect 
               geometrical elements and generates a 3d environment using time 
               as the 3rd dimension?
16:08 < GomGom> no but you would have cheap transitions
16:08 < GomGom> and 3d panings etc
16:08 < GomGom> alpha blending for free too
16:08 < GomGom> logo rendering for not much
16:09 <@tibit> sounds nice, I'll add it to the todo and await your patch. the 
               filter_control can be used to control it




WISHLIST for v0.6.X
-------------------
- handle soft-telecide/variable fps mpegs

- threads scheduling priority changes
	(postponed)
- add full LFS 
	(done)
- DVD subtitle support, via filter plugin facility
	(done - beta 0.6.0pre4)
- openquicktime import/export modules
	(postponed)
- multiple audio track AVI-file support
	(done - beta 0.6.0pre3)
- quicktime import/export modules
	(done - beta 0.6.0pre3)	
- write AVI file header first
	(done - beta 0.6.0pre2)	
- add some RGBtoYV12 conversion for MPEG export
	(done - beta 0.6.0pre2)	 
- divx decoding 
	(done - beta 0.6.0pre2)
- divx keyframe detection "filter_divxkey.so" for pass-through mode and 
  splitting.
	(done - beta 0.6.0pre2 - splitting dropped)
- support for cluster encoding
	(done - batch encoding only in beta 0.6.0pre2)
- suport for network streams
	(done - beta 0.6.0pre1)
- asynchronous AV import
	(done - beta 0.6.0pre1)
